#version 430 core

layout (points) in;

layout (triangle_strip, max_vertices = 5) out;

out vec3 outColor;

    // 
uniform float TopRightX;
uniform float TopRightY;
uniform float TopRightZ;

    // Parent Pos
uniform float TopLeftX;
uniform float TopLeftY;
uniform float TopLeftZ;

    // Right Particle
uniform float BotRightX;
uniform float BotRightY;
uniform float BotRightZ;

    // Bottom Particle
uniform float BotLeftX;
uniform float BotLeftY;
uniform float BotLeftZ;

in VS_GS_VERTEX{
    in vec4 position;
    in vec3 color;
    in mat4 PVM;
} gs_in[];

void main()
{
    outColor = gs_in[0].color;
    gl_Position = gs_in[0].position + gs_in[0].PVM * vec4(BotLeftX - TopLeftX, BotLeftY - TopLeftY, BotLeftZ - TopLeftZ, 0.0f); EmitVertex();    // Top Left

    gl_Position = gs_in[0].position + gs_in[0].PVM * vec4(0.0f, 0.0f, 0.0f, 0.0f); EmitVertex();    // Bottom Left

    gl_Position = gs_in[0].position + gs_in[0].PVM * vec4(BotRightX - TopLeftX, BotRightY - TopLeftY, BotRightZ - TopLeftZ, 0.0f); EmitVertex();    // Bottom Right

    gl_Position = gs_in[0].position + gs_in[0].PVM * vec4(TopRightX - TopLeftX, TopRightY - TopLeftY, TopRightZ - TopLeftZ, 0.0f); EmitVertex();    // Top Right

    gl_Position = gs_in[0].position + gs_in[0].PVM * vec4(BotLeftX - TopLeftX, BotLeftY - TopLeftY, BotLeftZ - TopLeftZ, 0.0f); EmitVertex();    // Top Left

    EndPrimitive();
}