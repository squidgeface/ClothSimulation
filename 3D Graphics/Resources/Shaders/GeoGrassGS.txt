#version 450 core

layout (points) in;
layout (triangle_strip , max_vertices = 170) out;

out vec3 outColor;
out vec2 outTexCoord;

in VS_GS_VERTEX{
	in vec4 position;
	in vec3 color;
	in mat4 mvp;
} gs_in[];

#define M_PI 3.14

void main() 
{
//grass		
	for (int i = 0; i < 6; i++)
	{
		for (int j = 0; j < 6; j++)
		{
			outTexCoord = vec2(0.0f, 1.0f);
			gl_Position = gs_in[0].position + gs_in[0].mvp * vec4(-2.0 + (5 * i), 0.0f, 0.0f + (3 * j), 0.0f); EmitVertex();//0
			outTexCoord = vec2(0.3f, 1.0f);																 
			gl_Position = gs_in[0].position + gs_in[0].mvp * vec4(2.0f + (5 * i), 0.0f, 0.0f + (3 * j), 0.0f); EmitVertex();//1
			outTexCoord = vec2(0.2f, 0.7f);												 
			gl_Position = gs_in[0].position + gs_in[0].mvp * vec4(0.5f + (5 * i), 4.0f, 0.0f + (3 * j), 0.0f); EmitVertex();//2
			outTexCoord = vec2(0.5f, 0.7f);												 
			gl_Position = gs_in[0].position + gs_in[0].mvp * vec4(3.5f + (5 * i), 3.8f, 0.0f + (3 * j), 0.0f); EmitVertex();//3
			outTexCoord = vec2(0.5f, 0.3f);												 
			gl_Position = gs_in[0].position + gs_in[0].mvp * vec4(4.0f + (5 * i), 8.0f, 0.0f + (3 * j), 0.0f); EmitVertex();//4	
			outTexCoord = vec2(0.75f, 0.3f);											 
			gl_Position = gs_in[0].position + gs_in[0].mvp * vec4(6.0f + (5 * i), 7.8f, 0.0f + (3 * j), 0.0f); EmitVertex();//5
			outTexCoord = vec2(1.0f, 0.0f);												 
			gl_Position = gs_in[0].position + gs_in[0].mvp * vec4(8.0f + (5 * i), 10.0f, 0.0f + (3 * j), 0.0f); EmitVertex();//6
			EndPrimitive();
		}			
	}
	
}